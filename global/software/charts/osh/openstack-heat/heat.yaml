---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: heat
  labels:
    name: heat-global
    component: heat
  layeringDefinition:
    abstract: false
    layer: global
  storagePolicy: cleartext
  substitutions:
    # Chart source
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.osh.heat
      dest:
        path: .source

    # Images
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.osh.heat
      dest:
        path: .values.images.tags

    # Endpoints
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.identity
      dest:
        path: .values.endpoints.identity
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.orchestration
      dest:
        path: .values.endpoints.orchestration
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.cloudformation
      dest:
        path: .values.endpoints.cloudformation
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.cloudwatch
      dest:
        path: .values.endpoints.cloudwatch
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.oslo_db
      dest:
        path: .values.endpoints.oslo_db
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.oslo_messaging
      dest:
        path: .values.endpoints.oslo_messaging
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.oslo_cache
      dest:
        path: .values.endpoints.oslo_cache
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.keystone.admin
      dest:
        path: .values.endpoints.identity.auth.admin
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.heat.heat
      dest:
        path: .values.endpoints.identity.auth.heat
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.heat.test
      dest:
        path: .values.endpoints.identity.auth.test
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.heat.heat_trustee
      dest:
        path: .values.endpoints.identity.auth.heat_trustee
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.heat.heat_stack_user
      dest:
        path: .values.endpoints.identity.auth.heat_stack_user
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.oslo_messaging.admin
      dest:
        path: .values.endpoints.oslo_messaging.auth.admin
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.heat.oslo_messaging.heat
      dest:
        path: .values.endpoints.oslo_messaging.auth.heat
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.heat.oslo_db
      dest:
        path: .values.endpoints.oslo_db.auth.heat
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.heat.oslo_db.database
      dest:
        path: .values.endpoints.oslo_db.path
        pattern: DB_NAME
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.orchestration.name
      dest:
        path: .values.endpoints.oslo_messaging.path
        pattern: VHOST_NAME

    # Secrets
    - dest:
        path: .values.endpoints.identity.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_keystone_admin_password
        path: .
    - dest:
        path: .values.endpoints.identity.auth.heat.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_heat_password
        path: .
    - dest:
        path: .values.endpoints.identity.auth.test.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_heat_test_password
        path: .
    - dest:
        path: .values.endpoints.identity.auth.heat_trustee.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_heat_trustee_password
        path: .
    - dest:
        path: .values.endpoints.identity.auth.heat_stack_user.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_heat_stack_user_password
        path: .
    - dest:
        path: .values.endpoints.oslo_messaging.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_oslo_messaging_admin_password
        path: .
    - dest:
        path: .values.endpoints.oslo_messaging.auth.heat.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_heat_oslo_messaging_password
        path: .
    - dest:
        path: .values.endpoints.oslo_db.auth.heat.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_heat_oslo_db_password
        path: .
    - dest:
        path: .values.endpoints.oslo_db.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_oslo_db_admin_password
        path: .
    - dest:
        path: .values.endpoints.oslo_cache.auth.memcache_secret_key
      src:
        schema: deckhand/Passphrase/v1
        name: osh_oslo_cache_secret_key
        path: .
data:
  chart_name: heat
  release: heat
  namespace: openstack
  wait:
    timeout: 1800
    labels:
      release_group: clcp-heat
    resources:
      - type: job
      - type: deployment
        min_ready: 100%
    native:
      enabled: false
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - type: job
          labels:
            release_group: clcp-heat
    post:
      create: []
  test:
    enabled: false
  values:
    dependencies:
      static:
        rabbit_init:
          services:
            - endpoint: internal
              service: oslo_messaging
          jobs:
            - clcp-openstack-rabbitmq-cluster-wait
    pod:
      security_context:
        #FIXME(pb269f): these needs to be changed to true once the upstream
        # chart has been fixed.
        heat:
          container:
            heat_api:
              readOnlyRootFilesystem: false
            heat_cfn:
              readOnlyRootFilesystem: false
            heat_cloudwatch:
              readOnlyRootFilesystem: false
            heat_engine:
              readOnlyRootFilesystem: false
      #NOTE(rk760n): replicas number is based on AIC3.x openstack services workers configuration
      replicas:
        api: 4
        cfn: 4
        cloudwatch: 4
        engine: 32
      affinity:
        anti:
          type:
            api: requiredDuringSchedulingIgnoredDuringExecution
            cfn: requiredDuringSchedulingIgnoredDuringExecution
            cloudwatch: requiredDuringSchedulingIgnoredDuringExecution
          weight:
            default: 100
      lifecycle:
        upgrades:
          deployments:
            pod_replacement_strategy: RollingUpdate
            rolling_update:
              max_unavailable: 50%
    labels:
      api:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      cfn:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      cloudwatch:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      engine:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
    conf:
      rabbitmq:
        policies:
          - vhost: "heat"
            name: "ha_ttl_heat"
            definition:
              ha-mode: "all"
              ha-sync-mode: "automatic"
              message-ttl: 70000
            priority: 0
            apply-to: all
            pattern: '^(?!(amq\.|reply_)).*'
      api_audit_map:
        DEFAULT:
          target_endpoint_type: None
        path_keywords:
          stacks: stack
          resources: resource
          preview: None
          detail: None
          abandon: None
          snapshots: snapshot
          restore: None
          outputs: output
          metadata: server
          signal: None
          events: event
          template: None
          template_versions: template_version
          functions: None
          validate: None
          resource_types: resource_type
          build_info: None
          actions: None
          software_configs: software_config
          software_deployments: software_deployment
          services: None
        service_endpoints:
          orchestration:service/orchestration
      logging:
        loggers:
          keys:
            - root
            - heat
            - oslo.messaging
        handlers:
          keys:
            - stdout
            - stderr
            - "null"
        formatters:
          keys:
            - context
            - default
        logger_root:
          level: WARNING
          handlers: "null"
        logger_heat:
          level: INFO
          handlers:
            - stdout
          qualname: heat
        logger_oslo.messaging:
          level: INFO
          handlers:
            - stdout
          qualname: oslo.messaging
        logger_amqp:
          level: WARNING
          handlers: stderr
          qualname: amqp
        logger_amqplib:
          level: WARNING
          handlers: stderr
          qualname: amqplib
        logger_eventletwsgi:
          level: WARNING
          handlers: stderr
          qualname: eventlet.wsgi.server
        logger_sqlalchemy:
          level: WARNING
          handlers: stderr
          qualname: sqlalchemy
        logger_boto:
          level: WARNING
          handlers: stderr
          qualname: boto
        handler_null:
          class: logging.NullHandler
          formatter: default
          args: ()
        handler_stdout:
          class: StreamHandler
          args: (sys.stdout,)
          formatter: context
        handler_stderr:
          class: StreamHandler
          args: (sys.stderr,)
          formatter: context
        formatter_context:
          class: oslo_log.formatters.ContextFormatter
        formatter_default:
          format: "%(message)s"
      policy:
        deny_stack_user: not role:heat_stack_user
        default: role:admin
        context_is_admin: role:admin or role:admin_support or role:admin_viewer
        tenant_create: role:_member_ or role:sriov_member or role:snapshot_member or role:support_member or role:admin or role:admin_support
        tenant_read: role:_member_ or role:sriov_member or role:snapshot_member or role:support_member or role:viewer or role:admin or role:admin_support or role:admin_viewer
        tenant_update: role:_member_ or role:sriov_member or role:snapshot_member or role:admin
        tenant_delete: role:_member_ or role:sriov_member or role:snapshot_member or role:admin
        tenant_snapshot: role:snapshot_member or role:admin
        actions:action: rule:tenant_update or role:tenant_heat_update
        build_info:build_info: rule:tenant_read or role:tenant_heat_read
        events:index: rule:tenant_read or role:tenant_heat_read
        events:show: rule:tenant_read or role:tenant_heat_read
        resource:index: rule:tenant_read or role:tenant_heat_read
        resource:metadata: rule:tenant_create or role:tenant_heat_create
        resource:signal: rule:tenant_create or role:tenant_heat_create or role:heat_stack_user
        resource:mark_unhealthy: rule:tenant_create or role:tenant_heat_create
        resource:show: rule:tenant_read or role:tenant_heat_read
        stacks:abandon: rule:tenant_delete or role:tenant_heat_delete
        stacks:create: rule:tenant_create or role:tenant_heat_create
        stacks:delete: rule:tenant_delete or role:tenant_heat_delete
        stacks:detail: rule:tenant_read or role:tenant_heat_read
        stacks:export: rule:tenant_read or role:tenant_heat_read
        stacks:files: rule:tenant_read or role:tenant_heat_read
        stacks:generate_template: rule:tenant_read or role:tenant_heat_read
        stacks:global_index: rule:tenant_read or role:tenant_heat_read
        stacks:index: rule:tenant_read or role:tenant_heat_read
        stacks:list_resource_types: rule:tenant_read or role:tenant_heat_read
        stacks:list_template_versions: rule:tenant_read or role:tenant_heat_read
        stacks:list_template_functions: rule:tenant_read or role:tenant_heat_read
        stacks:lookup: rule:tenant_read or role:tenant_heat_read
        stacks:preview: rule:tenant_create or role:tenant_heat_create
        stacks:resource_schema: rule:tenant_read or role:tenant_heat_read
        stacks:show: rule:tenant_read or role:tenant_heat_read
        stacks:template: rule:tenant_read or role:tenant_heat_read
        stacks:environment: rule:tenant_read or role:tenant_heat_read
        stacks:update: rule:tenant_update or role:tenant_heat_update
        stacks:update_patch: rule:tenant_update or role:tenant_heat_update
        stacks:preview_update: rule:tenant_update or role:tenant_heat_update
        stacks:preview_update_patch: rule:tenant_update or role:tenant_heat_update
        stacks:validate_template: rule:tenant_create or role:tenant_heat_create
        stacks:snapshot: rule:tenant_snapshot or role:tenant_heat_create
        stacks:show_snapshot: rule:tenant_snapshot or role:tenant_heat_read
        stacks:delete_snapshot: rule:tenant_snapshot or role:tenant_heat_delete
        stacks:list_snapshots: rule:tenant_snapshot or role:tenant_heat_read
        stacks:restore_snapshot: rule:tenant_snapshot or role:tenant_heat_create
        stacks:list_outputs: rule:tenant_snapshot or role:tenant_heat_read
        stacks:show_output: rule:tenant_snapshot or role:tenant_heat_read
        software_configs:global_index: rule:tenant_read or role:tenant_heat_read
        software_configs:index: rule:tenant_read or role:tenant_heat_read
        software_configs:create: rule:tenant_create or role:tenant_heat_create
        software_configs:show: rule:tenant_read or role:tenant_heat_read
        software_configs:delete: rule:tenant_delete or role:tenant_heat_delete
        software_deployments:index: rule:tenant_read or role:tenant_heat_read
        software_deployments:create: rule:tenant_create or role:tenant_heat_create
        software_deployments:show: rule:tenant_read or role:tenant_heat_read
        software_deployments:update: rule:tenant_update or role:tenant_heat_update
        software_deployments:delete: rule:tenant_delete or role:tenant_heat_delete
        software_deployments:metadata: rule:tenant_read or role:tenant_heat_read
        service:index: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Blazar::Host: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Cinder::EncryptedVolumeType: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Cinder::QoSAssociation: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Cinder::QoSSpecs: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Cinder::Quota: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Cinder::VolumeType: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Keystone::*: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Manila::ShareType: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Neutron::ProviderNet: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Neutron::QoSBandwidthLimitRule: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Neutron::QoSPolicy: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Neutron::Quota: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Neutron::Segment: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Nova::Flavor: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Nova::HostAggregate: rule:tenant_read or role:tenant_heat_read
        resource_types:OS::Nova::Quota: rule:tenant_read or role:tenant_heat_read
        cloudformation:ListStacks: rule:deny_stack_user
        cloudformation:CreateStack: rule:deny_stack_user
        cloudformation:DescribeStacks: rule:deny_stack_user
        cloudformation:DeleteStack: rule:deny_stack_user
        cloudformation:UpdateStack: rule:deny_stack_user
        cloudformation:CancelUpdateStack: rule:deny_stack_user
        cloudformation:DescribeStackEvents: rule:deny_stack_user
        cloudformation:ValidateTemplate: rule:deny_stack_user
        cloudformation:GetTemplate: rule:deny_stack_user
        cloudformation:EstimateTemplateCost: rule:deny_stack_user
        cloudformation:DescribeStackResource: role:heat_stack_user
        cloudformation:DescribeStackResources: rule:deny_stack_user
        cloudformation:ListStackResources: rule:deny_stack_user
      heat:
        DEFAULT:
          max_stacks_per_tenant: 100000
          max_resources_per_stack: -1
          max_template_size: "5440000"
          stack_action_timeout: 7200
          enable_stack_abandon: "True"
        oslo_messaging_rabbit:
          heartbeat_timeout_threshold: 60
        oslo_middleware:
          enable_proxy_headers_parsing: true
        audit_middleware_notifications:
          driver: log
  dependencies:
    - os-heat-htk
...
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: os-heat-htk
  layeringDefinition:
    abstract: false
    layer: global
  substitutions:
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.osh.heat-htk
      dest:
        path: .source
  storagePolicy: cleartext
data:
  chart_name: os-heat-htk
  release: os-heat-htk
  namespace: os-heat-htk
  timeout: 600
  wait:
    timeout: 600
  upgrade:
    no_hooks: true
  values: {}
  dependencies: []
...
